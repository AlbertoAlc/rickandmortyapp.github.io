{"ast":null,"code":"var _jsxFileName = \"/Users/blezzed/Documents/react-app/src/components/Cards/Cards.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = ({\n  results\n}) => {\n  let display;\n  if (results) {\n    display = results.map(x => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status\n      } = x;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-4 fw-bold mb-4\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6\",\n                children: \"Last Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge bg-danger\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    });\n  } else {\n    display = \"No existe\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","results","display","map","x","id","name","image","location","status","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blezzed/Documents/react-app/src/components/Cards/Cards.js"],"sourcesContent":["import React from 'react'\n\nconst Cards = ({results}) => {\n    let display;\n\n    if (results){\n        display = results.map(x=>{\n            let {id, name, image, location, status} = x\n            return(<div key={id} className=\"col-4 position-relative\">\n                <div>\n                    <img src={image} alt=\"\" className=\"img-fluid\"/>\n                    <div className='content'>\n                        <div className='fs-4 fw-bold mb-4'>{name}</div>\n                        <div>\n                            <div className='fs-6'>Last Location</div>\n                            <div>{location.name}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='badge bg-danger'>{status}</div>\n            </div>)\n        });\n    }else{\n        display = \"No existe\" ;\n    }\n\n\n\n  return <>{display}</>\n}\n\nexport default Cards"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EACzB,IAAIC,OAAO;EAEX,IAAID,OAAO,EAAC;IACRC,OAAO,GAAGD,OAAO,CAACE,GAAG,CAACC,CAAC,IAAE;MACrB,IAAI;QAACC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAM,CAAC,GAAGL,CAAC;MAC3C,oBAAOP,OAAA;QAAca,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpDd,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAKe,GAAG,EAAEL,KAAM;YAACM,GAAG,EAAC,EAAE;YAACH,SAAS,EAAC;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC/CpB,OAAA;YAAKa,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACpBd,OAAA;cAAKa,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEL;YAAI;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/CpB,OAAA;cAAAc,QAAA,gBACId,OAAA;gBAAKa,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAa;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzCpB,OAAA;gBAAAc,QAAA,EAAMH,QAAQ,CAACF;cAAI;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNpB,OAAA;UAAKa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEF;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAXlCZ,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYd,CAAC;IACV,CAAC,CAAC;EACN,CAAC,MAAI;IACDf,OAAO,GAAG,WAAW;EACzB;EAIF,oBAAOL,OAAA,CAAAE,SAAA;IAAAY,QAAA,EAAGT;EAAO,gBAAG,CAAC;AACvB,CAAC;AAAAgB,EAAA,GA3BKlB,KAAK;AA6BX,eAAeA,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}